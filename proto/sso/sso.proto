syntax = "proto3";

package auth.v1;

option go_package = "lp.sso.v1;ssov1";

service Auth {
    rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse);
    rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
    rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
    rpc AddApp (AddAppRequest) returns (AddAppResponse);
}

message RegisterUserRequest {
    string email = 1; // Email of the user to register.
    string password = 2; // Password of the user to register.
}

message RegisterUserResponse {
    int64 user_id = 1; // User ID of the registered user.
}

message LoginUserRequest {
    string email = 1; // Email of the user to login.
    string password = 2; // Password of the user to login.
    int64 app_id = 3; // ID of the app to log in to.
}

message LoginUserResponse {
    string access_token = 1; // Auth access token of the logged in user.
    string refresh_token = 2; // Auth refresh token of the logged in user.
}

message RefreshTokenRequest {
    string refresh_token = 1; // Auth refresh token of the logged in user.
}

message RefreshTokenResponse {
    string access_token = 1; // Auth access token of the logged in user.
}

message IsAdminRequest {
    int64 user_id = 1; // User ID to validate.
}

message IsAdminResponse {
    bool is_admin = 1; // Indicates whether the user is an admin.
}

message AddAppRequest {
    string name = 1; // App name.
    string secret = 2; // Secret app code.
}

message AddAppResponse {
    int64 app_id = 1; // App ID of the added app.
}